-- 1. Создание базы данных
CREATE DATABASE OnlineStore;
GO

USE OnlineStore;
GO

-- 2. Создание таблиц
-- Таблица пользователей
CREATE TABLE Users (
    ID INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(100) NOT NULL,
    Email NVARCHAR(255) UNIQUE NOT NULL,
    RegistrationDate DATETIME DEFAULT GETDATE()
);

-- Таблица категорий
CREATE TABLE Categories (
    ID INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(100) NOT NULL
);

-- Таблица продуктов
CREATE TABLE Products (
    ID INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(100) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    CategoryID INT NOT NULL,
    FOREIGN KEY (CategoryID) REFERENCES Categories(ID)
);

-- Таблица заказов
CREATE TABLE Orders (
    ID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL,
    OrderDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(ID)
);

-- Таблица товаров в заказах
CREATE TABLE OrderProducts (
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    PRIMARY KEY (OrderID, ProductID),
    FOREIGN KEY (OrderID) REFERENCES Orders(ID),
    FOREIGN KEY (ProductID) REFERENCES Products(ID)
);

-- 3. Связи между таблицами
-- Пример связи 1:N (пользователь - заказы)
ALTER TABLE Orders ADD CONSTRAINT FK_Orders_Users FOREIGN KEY (UserID) REFERENCES Users(ID);

-- 4. Создание уникального индекса
CREATE UNIQUE INDEX idx_unique_email ON Users(Email);

-- 5. Примеры SQL-запросов
-- Выборка всех продуктов с фильтрацией и сортировкой
SELECT * FROM Products WHERE Price > 100 ORDER BY Name ASC;

-- Обновление цены продуктов
UPDATE Products SET Price = Price * 1.1 WHERE CategoryID = 2;

-- Удаление пользователей, которые не входили с начала года
DELETE FROM Users WHERE RegistrationDate < '2023-01-01';

-- Группировка продуктов по категориям
SELECT CategoryID, COUNT(*) AS ProductCount FROM Products GROUP BY CategoryID;

-- Левое соединение: выборка пользователей и их заказов
SELECT Users.Name, Orders.OrderDate
FROM Users
LEFT JOIN Orders ON Users.ID = Orders.UserID;

-- Правое соединение: выборка продуктов и их категорий
SELECT Products.Name AS ProductName, Categories.Name AS CategoryName
FROM Products
RIGHT JOIN Categories ON Products.CategoryID = Categories.ID;

-- Пересечение (INNER JOIN): выборка продуктов в заказах
SELECT Orders.ID AS OrderID, Products.Name AS ProductName
FROM Orders
INNER JOIN OrderProducts ON Orders.ID = OrderProducts.OrderID
INNER JOIN Products ON OrderProducts.ProductID = Products.ID;
